/**
 * @author javdevgames http://coding.javdev.com
 *
 * DepthBufferTests
 * The MIT License (MIT)
 * Copyright (c) 2015 javdevgames
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
 */
 
use namespace flare;
use namespace flare.transforms;
use namespace flare.blendMode;

sampler2D colorBuffer;
sampler2D effectBuffer;
sampler2D materialTexture;


technique main
{
	float4 pos = transform();
	
	output vertex = pos;
	
	interpolated float4 iPos = pos / 300;
	
	output fragment[2];
	fragment[0] = sampler2D( materialTexture, iUV0 );
	fragment[1] = iPos.w;
}

technique compose
{
	float4 color = sampler2D(colorBuffer, iUV0);
	float4 effects = sampler2D(effectBuffer, iUV0);
	
	float4 gData = add(color, effects );
	
	output vertex = position.xyzw;
	output fragment = float4(gData.rgb, 1);	
}